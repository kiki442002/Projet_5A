<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.4.0" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>STMicroelectronics</vendor>
  <name>X-CUBE-SAFEA1</name>
  <description>Drivers and sample applications for STSAFE</description>
  <license>Additional_License_Terms_forX-CUBE-SAFEA1.html</license>
  <!-- web download link -->
  <url>http://sw-center.st.com/packs/x-cube/</url>

  <releases>
    <release version="1.2.2" date="2023-08-01">
      - BSP driver developement as per the CubeMX model based on v1.2.1 web released package 
      - Create sample applications with STM32CubeMX V6.10.0
      - This version is compatible with STM32CubeMX V6.10.0
    </release>
  </releases>
  
  <taxonomy>
    <description  Cclass="Board Component">The STSAFE components support class</description>
    <description  Cclass="Board Extension">The expansion boards support class</description>
    <description  Cclass="Security">Security</description>
    <description  Cclass="Security">Security</description>
  </taxonomy>

  <keywords>    
    <keyword>ARM</keyword>
    <keyword>Cortex-M</keyword>
    <keyword>STMicroelectronics</keyword>
    <keyword>IMPLEMENTED_WITH_STM32CUBEMX</keyword>
    <keyword>CUBEMX_MIGRATION_CAPABILITY</keyword>
    <keyword>STSAFE</keyword>
  </keywords>
  
  <apis>
    <!-- API -->
    <api Cclass="Board Extension" Cgroup="STSAFEA1" Capiversion="1.2.2" exclusive="0">
      <description>STSAFEA1 Driver for X-NUCLEO-STSAFEA1</description>
      <files>
        <file category="doc"    name="Documentation/X-CUBE-SAFEA1.chm"/>
      </files>
    </api>
    <api Cclass="Board Part" Cgroup="STSAFEA110" Capiversion="1.2.2" exclusive="0">
      <description>STSAFEA1 Driver for X-NUCLEO-STSAFEA1</description>
      <files>
        <file category="doc"    name="Documentation/X-CUBE-SAFEA1.chm"/>
      </files>
    </api>
    <api Cclass="Security" Cgroup="ST_Cryptolib" Capiversion="3.1.0" exclusive="0">
      <description>Middleware Driver for X-NUCLEO-STSAFEA1</description>
      <files>
        <file category="doc"    name="Documentation/X-CUBE-SAFEA1.chm"/>
      </files>
    </api>
    <api Cclass="Security" Cgroup="MbedTLS" Capiversion="2.26.0" exclusive="0">
      <description>Middleware Driver for X-NUCLEO-STSAFEA1</description>
      <files>
        <file category="doc"    name="Documentation/X-CUBE-SAFEA1.chm"/>
      </files>
    </api>
  </apis>
  
  
  <conditions>
    <condition id="Cortex-M Device">
      <description>Cortex-M processor based device: Cortex-M0, Cortex-M0+, Cortex-M3, Cortex-M4, Cortex-M7</description>
      <!-- STM32F0 -->
      <accept Dcore="Cortex-M0"/>
      
      <!-- STM32L0 -->
      <accept Dcore="Cortex-M0+"/>
      
      <!-- STM32F1, STM32F2 and STM32L1 -->
      <accept Dcore="Cortex-M3"/>
      
      <!-- STM32L5-->
      <accept Dcore="Cortex-M33"/>
      <!-- STM32F4, STM32F3 and STM32L4 series -->
      <accept Dcore="Cortex-M4"/>
      
      <!-- STM32F7 and STMH7 series -->
      <accept Dcore="Cortex-M7"/>     
    </condition>

    <condition id="CM0_GCC">
      <require Dcore="Cortex-M0"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM0_IAR">
      <require Dcore="Cortex-M0"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM0_Keil">
      <require Dcore="Cortex-M0"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM0+_GCC">
      <require Dcore="Cortex-M0+"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM0+_IAR">
      <require Dcore="Cortex-M0+"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM0+_Keil">
      <require Dcore="Cortex-M0+"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="CM3_GCC">
      <require Dcore="Cortex-M3"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM3_IAR">
      <require Dcore="Cortex-M3"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM3_Keil">
      <require Dcore="Cortex-M3"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    
    <condition id="CM4_GCC">
      <require Dcore="Cortex-M4"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM4_IAR">
      <require Dcore="Cortex-M4"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM4_Keil">
      <require Dcore="Cortex-M4"/>
      <require Tcompiler="ARMCC"/>
    </condition>
    
    <condition id="CM7_GCC">
      <require Dcore="Cortex-M7"/>
      <require Tcompiler="GCC"/>
    </condition>
    <condition id="CM7_IAR">
      <require Dcore="Cortex-M7"/>
      <require Tcompiler="IAR"/>
    </condition>
    <condition id="CM7_Keil">
      <require Dcore="Cortex-M7"/>
      <require Tcompiler="ARMCC"/>
    </condition>

    <condition id="STSAFEA1 Condition">
      <description>Cortex-M Device and board setup (X-NUCLEO-STSAFEA1)</description> 
      <require condition="Cortex-M Device"/>   
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

    <!-- STSAFE Examples condition -->
    <condition id="STSAFEA1 Pairing Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <deny Cclass="Security" Cgroup="ST_Cryptolib"/>
      <deny Cclass="Security" Cgroup="MbedTLS"/>
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>
    <condition id="STSAFEA1 Examples Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS"/>
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>
    <condition id="STSAFEA1 AllUseCase Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS"/>
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

    <condition id="STSAFEA1 Ephemeral_Key Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS"/>
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

      <condition id="STSAFEA1 Establish_Secret Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS"/>
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

    <condition id="STSAFEA1 Key_Pair_Generation Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS" />
      <!--require Cbundle="Security" Cclass="Middleware" Cgroup="MbedTLS" /-->
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

    <condition id="STSAFEA1 Signature Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS"/>
      <!--require Cbundle="Security" Cclass="Middleware" Cgroup="MbedTLS" /-->
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

    <condition id="STSAFEA1 Wrap_Unwrap Condition">
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <accept Cclass="Security" Cgroup="ST_Cryptolib"/>
      <accept Cclass="Security" Cgroup="MbedTLS"/>
      <!--require Cbundle="Security" Cclass="Middleware" Cgroup="MbedTLS" /-->
      <require Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
    </condition>

    <condition id="STSAFEA110 Condition">
      <description>Cortex-M Device and board setup (STSAFEA110 Driver)</description>      
      <require condition="Cortex-M Device"/>
      <require Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
    </condition>

    <condition id="STlib Condition">
      <description>Cortex-M Device and board setup (STCrypto Middleware Driver)</description>
      <require condition="Cortex-M Device"/>
      <accept Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <deny Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_PAIRING"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_AUTHENTICATION"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_ALL_USE_CASES"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_EPHEMERAL_KEY"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_ESTABLISH_SECRET"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_KEY_PAIR_GENERATION"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_SIGNATURE"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_WRAP_UNWRAP"/>
      <accept Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
      <deny Cclass="Security" Cgroup="MbedTLS"/>
    </condition>
    
    <condition id="ThirdParty Condition">
      <description>Cortex-M Device and board setup (Third Party Crypto Middleware Driver)</description>
      <require condition="Cortex-M Device"/>
      <accept Cbundle="STSAFE" Cclass="Board Extension" Cgroup="STSAFEA1"/>
      <deny Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_PAIRING"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_AUTHENTICATION"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_ALL_USE_CASES"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_EPHEMERAL_KEY"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_ESTABLISH_SECRET"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_KEY_PAIR_GENERATION"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_SIGNATURE"/>
      <accept Cbundle="STSAFE_Applications" Cclass="Device" Cgroup="Application" Cvariant="STSAFEA1_WRAP_UNWRAP"/>
      <accept Cbundle="STSAFE" Cclass="Board Part" Cgroup="STSAFEA110"/>
      <deny Cclass="Security" Cgroup="ST_Cryptolib"/>
    </condition>
  </conditions>
  
  <components>
    <bundle Cvendor="STMicroelectronics" Cbundle="STSAFE" Cclass="Board Part" Cversion="1.2.2">
      <description>STSAFE Driver for custom boards</description>
      <doc>Documentation/STMicroelectronics.X-CUBE-SAFEA1_GettingStarted.pdf</doc>
      <component Cgroup="STSAFEA110" Csub="A110" condition="STSAFEA110 Condition" maxInstances="1" Capiversion="1.2.2">
        <description>STSAFEA110 files</description>
        <RTE_Components_h>#define STSAFEA110</RTE_Components_h>
      <files>
            <file category="header"  name="Drivers/BSP/Components/SAFEA1xx/stsafea100.h"/>
            <file category="header"  name="Drivers/BSP/Components/SAFEA1xx/stsafea110.h"/>
            <file category="header"  name="Drivers/BSP/Components/SAFEA1xx/stsafeaxxx.h"/>
      </files>
      </component>
    </bundle>

    <bundle Cvendor="STMicroelectronics" Cbundle="STSAFE" Cclass="Board Extension" Cversion="1.2.2">
    <description>Board Extension</description>
      <doc>Documentation/STMicroelectronics.X-CUBE-SAFEA1_GettingStarted.pdf</doc>
      <component Cgroup="STSAFEA1" condition="STSAFEA1 Condition" maxInstances="1" Capiversion="1.2.2">
        <description> BSP for X-NUCLEO-STSAFEA1 </description>
        <RTE_Components_h>#define SAFEA1</RTE_Components_h>
        <files>
            <file category="header"  name="Drivers/BSP/SAFE_Axx0/stsafea_core.h"/>
            <file category="source"  name="Drivers/BSP/SAFE_Axx0/stsafea_core.c"/>
            <file category="header"  name="Drivers/BSP/SAFE_Axx0/stsafea_crc.h"/>
            <file category="source"  name="Drivers/BSP/SAFE_Axx0/stsafea_crc.c"/>
            <file category="header"  name="Drivers/BSP/SAFE_Axx0/stsafea_crypto.h"/>
            <file category="source"  name="Drivers/BSP/SAFE_Axx0/stsafea_crypto.c"/>
            <file category="header"  name="Drivers/BSP/SAFE_Axx0/stsafea_service.h"/>
            <file category="source"  name="Drivers/BSP/SAFE_Axx0/stsafea_service.c"/>
            <file category="header"  name="Drivers/BSP/SAFE_Axx0/stsafea_types.h"/>
        </files>
      </component>
    </bundle>

      <component Cclass="Security" Cgroup="ST_Cryptolib"  Cvendor="STMicroelectronics" Cversion="3.1.0" condition="STlib Condition" maxInstances="1">
        <description> Middleware for ST-Cryptolib </description>
        <RTE_Components_h>#define STCRYPTOLIB</RTE_Components_h>
        <files>
          <file category="include" name="Middlewares/ST/ST_Cryptolib/Inc/"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/config.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/crypto.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/aes.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/CBC/aes_cbc.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/CCM/aes_ccm.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/CFB/aes_cfb.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/CMAC/aes_cmac.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/Common/aes_common.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/Common/aes_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/CTR/aes_ctr.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/ECB/aes_ecb.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/GCM/aes_gcm.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/KEYWRAP/aes_keywrap.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/OFB/aes_ofb.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/AES/XTS/aes_xts.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/ARC4/arc4.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/C25519/c25519.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/CHACHA/chacha.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/CHACHA20-POLY1305/chacha20-poly1305.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common/err_codes.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common/macros.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common/sk.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common/types.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_chacha20_poly1305/chacha20_core.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_chacha20_poly1305/poly1305_core.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/math.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/BN/arith.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/BN/bn.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/BN/conv.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/BN/modular.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/BN/monty.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ecc_rsa/MATH/BN/rng_bn.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/Common_ed25519_c25519/internals/fe25519.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/DES/des.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/DES/CBC/des_cbc.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/DES/Common/des_common.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/DES/ECB/des_ecb.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/ECC/ecc.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/ECC/LowLevel/elliptic.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/ED25519/ed25519.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/ED25519/internals/ge25519.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/ED25519/internals/sc25519.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/hash.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/Common/hash_common.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/Common/sha256_sha224_transform.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/Common/sha512_sha384_transform.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/MD5/hmac_md5.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/MD5/md5.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/MD5/md5_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA1/hmac_sha1.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA1/sha1.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA1/sha1_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA224/hmac_sha224.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA224/sha224.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA224/sha224_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA256/hmac_sha256.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA256/sha256.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA256/sha256_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA384/hmac_sha384.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA384/sha384.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA384/sha384_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA512/hkdf512.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA512/hmac_sha512.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA512/sha512.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/HASH/SHA512/sha512_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/POLY1305/poly1305.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/RNG/rng.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/RNG/DRBG_AES128/drbg.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/RSA/rsa.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/RSA/LowLevel/rsa_low_level.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/RSA/PKCS#1v15/rsa_pkcs1v15.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/TDES/tdes.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/TDES/CBC/tdes_cbc.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/TDES/Common/tdes_common.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/Inc/TDES/ECB/tdes_ecb.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/X509/Inc/x509.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/X509/Inc/x509_crypto.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/X509/Inc/x509_prints.h"/>
          <file category="header" name="Middlewares/ST/ST_Cryptolib/X509/Inc/x509_subparsing.h"/>
          <file category="source" name="Middlewares/ST/ST_Cryptolib/X509/Src/x509.c" />
          <file category="source" name="Middlewares/ST/ST_Cryptolib/X509/Src/x509_crypto.c" />
          <file category="source" name="Middlewares/ST/ST_Cryptolib/X509/Src/x509_subparsing.c" />
          <file category="library" condition="CM4_GCC" name="Middlewares/ST/ST_Cryptolib/Lib/STM32L4/STM32CryptographicV3.1.1_CM4_IARv8.a"/>
          <file category="library" condition="CM4_Keil" name="Middlewares/ST/ST_Cryptolib/Lib/STM32L4/STM32CryptographicV3.0.0_CM4_KEIL_slsm1elfspf.lib"/>
          <file category="library" condition="CM4_IAR" name="Middlewares/ST/ST_Cryptolib/Lib/STM32L4/STM32CryptographicV3.1.1_CM4_IARv8.a"/>

          <file category="library" condition="CM0_GCC" name="Middlewares/ST/ST_Cryptolib/Lib/STM32F0/STM32CryptographicV3.1.1_CM0_IARv8.a"/>
          <file category="library" condition="CM0_Keil" name="Middlewares/ST/ST_Cryptolib/Lib/STM32F0/STM32CryptographicV3.0.0_CM0_KEIL_slsm1elfspf.lib"/>
          <file category="library" condition="CM0_IAR" name="Middlewares/ST/ST_Cryptolib/Lib/STM32F0/STM32CryptographicV3.1.1_CM0_IARv8.a"/>

          <file category="library" condition="CM0+_GCC" name="Middlewares/ST/ST_Cryptolib/Lib/STM32L0/STM32CryptographicV3.1.1_CM0PLUS_IARv8.a"/>
          <file category="library" condition="CM0+_Keil" name="Middlewares/ST/ST_Cryptolib/Lib/STM32L0/STM32CryptographicV3.0.0_CM0PLUS_KEIL_slsm1elfspf.lib"/>
          <file category="library" condition="CM0+_IAR" name="Middlewares/ST/ST_Cryptolib/Lib/STM32L0/STM32CryptographicV3.1.1_CM0PLUS_IARv8.a"/>

          <file category="library" condition="CM7_GCC" name="Middlewares/ST/ST_Cryptolib/Lib/STM32H7/STM32CryptographicV3.1.1_STM32H7_IARv8.a"/>
          <file category="library" condition="CM7_Keil" name="Middlewares/ST/ST_Cryptolib/Lib/STM32H7/STM32CryptographicV3.1.1_STM32H7_KEIL_slsm1elfspf_ARMCCv6.lib"/>
          <file category="library" condition="CM7_IAR" name="Middlewares/ST/ST_Cryptolib/Lib/STM32H7/STM32CryptographicV3.1.1_STM32H7_IARv8.a"/>
        </files>
      </component>

      <component Cclass="Security" Cgroup="MbedTLS" Cvendor="MbedTLS" Cversion="2.26.0" condition="ThirdParty Condition" maxInstances="1">
        <description> Middleware for Third Party Cryptolib </description>
        <RTE_Components_h>#define MbedTLS</RTE_Components_h>
        <files>
          <file category="include" name="Middlewares/Third_Party/MbedTLS/include/"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/aes.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/aesni.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/arc4.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/aria.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/asn1.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/asn1write.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/base64.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/bignum.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/blowfish.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/bn_mul.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/camellia.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ccm.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/certs.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/chacha20.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/chachapoly.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/check_config.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/cipher.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/cipher_internal.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/cmac.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/compat-1.3.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/config.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/config_psa.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ctr_drbg.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/debug.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/des.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/dhm.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ecdh.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ecdsa.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ecjpake.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ecp.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ecp_internal.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/entropy.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/entropy_poll.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/error.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/gcm.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/havege.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/hkdf.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/hmac_drbg.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/md.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/md_internal.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/md2.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/md4.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/md5.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/memory_buffer_alloc.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/net.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/net_sockets.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/nist_kw.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/oid.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/padlock.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/pem.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/pk.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/pk_internal.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/pkcs11.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/pkcs12.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/pkcs5.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/platform.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/platform_time.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/platform_util.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/poly1305.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/psa_util.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ripemd160.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/rsa.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/rsa_internal.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/sha1.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/sha256.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/sha512.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ssl.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ssl_cache.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ssl_ciphersuites.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ssl_cookie.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ssl_internal.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/ssl_ticket.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/threading.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/timing.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/version.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/x509.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/x509_crl.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/x509_crt.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/x509_csr.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/mbedtls/xtea.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_compat.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_config.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_driver_common.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_extra.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_platform.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_se_driver.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_sizes.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_struct.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_types.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/include/psa/crypto_values.h"/>
          <file category="header" name="Middlewares/Third_Party/MbedTLS/library/common.h"/>
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/aes.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/asn1parse.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/asn1write.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/bignum.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/cipher.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/cipher_wrap.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/cmac.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/ecdsa.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/ecp.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/ecp_curves.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/md.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/oid.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/pk.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/pk_wrap.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/pkparse.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/platform_util.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/sha1.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/sha256.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/sha512.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/x509.c" />
          <file category="source" name="Middlewares/Third_Party/MbedTLS/library/x509_crt.c" />
        </files>
      </component>

    <bundle Cvendor="STMicroelectronics" Cbundle="STSAFE_Applications" Cclass="Device" Cversion="1.2.2">
    <description>STSAFE Authentication example</description>
      <doc>Documentation/STMicroelectronics.X-CUBE-SAFEA1_GettingStarted.pdf</doc>
	  <component  Cgroup="Application" Cvariant="STSAFEA1_PAIRING" isDefaultVariant="true" condition="STSAFEA1 Pairing Condition" maxInstances="1">
        <!-- short component description -->
        <description>Pairing example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_PAIRING</RTE_Components_h>
        <files/>
      </component>
      <component  Cgroup="Application" Cvariant="STSAFEA1_AUTHENTICATION" isDefaultVariant="true" condition="STSAFEA1 Examples Condition" maxInstances="1">
        <!-- short component description -->
        <description>Authentication example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_AUTHENTICATION_DEMO</RTE_Components_h>
        <files/>
      </component>

      <component  Cgroup="Application" Cvariant="STSAFEA1_ALL_USE_CASES" isDefaultVariant="true" condition="STSAFEA1 AllUseCase Condition" maxInstances="1">
        <!-- short component description -->
        <description>All Use case Example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_ALL_USE_CASES</RTE_Components_h>
        <files/>
      </component>

      <component  Cgroup="Application" Cvariant="STSAFEA1_EPHEMERAL_KEY" isDefaultVariant="true" condition="STSAFEA1 Ephemeral_Key Condition" maxInstances="1">
        <!-- short component description -->
        <description>Ephemeral_Key Example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_EPHEMERAL_KEY</RTE_Components_h>
        <files/>
      </component>

      <component  Cgroup="Application" Cvariant="STSAFEA1_ESTABLISH_SECRET" isDefaultVariant="true" condition="STSAFEA1 Establish_Secret Condition" maxInstances="1">
        <!-- short component description -->
        <description>Establish_Secret Example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_ESTABLISH_SECRET</RTE_Components_h>
        <files/>
      </component>
  
        <component  Cgroup="Application" Cvariant="STSAFEA1_KEY_PAIR_GENERATION" isDefaultVariant="true" condition="STSAFEA1 Key_Pair_Generation Condition" maxInstances="1">
        <!-- short component description -->
        <description>Key_Pair_Generation Example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_KEY_PAIR_GENERATION</RTE_Components_h>
        <files/>
      </component>
  
        <component  Cgroup="Application" Cvariant="STSAFEA1_SIGNATURE" isDefaultVariant="true" condition="STSAFEA1 Signature Condition" maxInstances="1">
        <!-- short component description -->
        <description>Signature Example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_SIGNATURE</RTE_Components_h>
        <files/>
      </component>
  
        <component  Cgroup="Application" Cvariant="STSAFEA1_WRAP_UNWRAP" isDefaultVariant="true" condition="STSAFEA1 Wrap_Unwrap Condition" maxInstances="1">
        <!-- short component description -->
        <description>Wrap_Unwrap Example of X-NUCLEO-STSAFEA1</description>
        <RTE_Components_h>#define STSAFEA1_WRAP_UNWRAP</RTE_Components_h>
        <files/>
      </component>
    </bundle>    
    
  </components>

</package>
