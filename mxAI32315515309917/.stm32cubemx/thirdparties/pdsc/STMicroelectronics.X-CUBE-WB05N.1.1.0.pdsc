<?xml version="1.0" encoding="utf-8"?>

<package schemaVersion="1.6.0" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>STMicroelectronics</vendor>
  <name>X-CUBE-WB05N</name>
  <description>BLE stack and sample applications for STM32WB05N module</description>
  <license>en.DM00751078.pdf</license>
  <!-- web download link -->
  <url>http://sw-center.st.com/packs/x-cube/</url>
  
  <releases>
    <release version="1.1.0" date="2024-08-20">
      STM32WB05N support package V1.1.0
      - First official release compatible to CubeMX
      - This version is compatible with STM32CubeMX V6.12.x (not fully compatible with older releases)
      - Create sample applications with STM32CubeMX V6.12.x
      - Align to XSD Schema V1.6.0
    </release>
  </releases>
  
  <taxonomy>
    <description Cclass="Wireless">Wireless stack for Bluetooth Low Energy</description>
  </taxonomy>
  
  <keywords>    
    <keyword>ARM</keyword>
    <keyword>Cortex-M</keyword>
    <keyword>STMicroelectronics</keyword>
    <keyword>Wireless</keyword>
    <keyword>Bluetooth Low Energy</keyword>	
    <keyword>STM32WB05xN</keyword>
    <keyword>X-NUCLEO-WB05KN1</keyword>
    <keyword>IMPLEMENTED_WITH_STM32CUBEMX</keyword>
    <!--<keyword>CUBEMX_MIGRATION_CAPABILITY</keyword>-->
    <keyword>IS_CONTEXT_EXCLUSIVE</keyword>
    <keyword>DNS_BUSIO_X_CONTEXT_SHARING</keyword>
    <keyword>DOES_NOT_SUPPORT_SECURE</keyword>
  </keywords>
  
  <apis>
    <!-- API -->
    <api Cclass="Wireless" Cgroup="STM32WB05N" Capiversion="1.1.0" exclusive="1">
      <description>HCI Pattern Interface</description>
      <files>
        <file category="doc" name="Documentation/X-CUBE-WB05N.chm"/>
      </files>
    </api>
  </apis>
  
  <conditions>
    <condition id="Cortex-M Device">
      <description>Cortex-M processor based device: Cortex-M0, Cortex-M0+, Cortex-M3, Cortex-M4, Cortex-M7, Cortex-M33</description>
      <accept Dcore="Cortex-M0"/>
      <accept Dcore="Cortex-M0+"/>
      <accept Dcore="Cortex-M3"/>
      <accept Dcore="Cortex-M4"/>
      <accept Dcore="Cortex-M7"/>
      <accept Dcore="Cortex-M33"/>
    </condition>

    <condition id="BLEStack Condition">
      <description>Cortex-M Device and board setup (STM32WB05N)</description>      
      <require condition="Cortex-M Device"/>   
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="Utils" Cversion="1.1.0"/>
    </condition> 
	
    <!-- API condition -->
    <condition id="TL API Condition">
      <description>Request the API BLE Transport Layer</description>      
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL_INTERFACE" Capiversion="1.1.0"/>
    </condition>
	
    <condition id="BLE_MANAGER">
        <require Cclass="BLE_Manager" Cgroup="BLE_Manager"/>
    </condition>

    <condition id="PARSON">
        <require Cclass="Data Exchange" Cgroup="parson"/>
    </condition>

    <condition id="JSON">
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="Controller" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL" Cvariant="Basic" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL_INTERFACE" Cvariant="UserBoard" Cversion="1.1.0"/>
      <require condition="BLE_MANAGER"/>
      <require condition="PARSON"/>
	  <require Cbundle="HCI_Interface" Cclass="WB05KN1" Cgroup="Communication protocol"/>
	  <require Dcore="Cortex-M33"/>
    </condition>
	
	    <!-- SensorDemo_BLESensor-App, SampleApp, Beacon, Central applications condition -->
    <condition id="Application Condition">
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="Controller" Cversion="1.1.0"/>
      <deny Cbundle="STM32WB05N_BLE_Manager" Cclass="BLE_Manager" Cgroup="BLE_Manager" Cversion="1.11.0"/>
	  <require Cbundle="HCI_Interface" Cclass="WB05KN1" Cgroup="Communication protocol"/>
    </condition>
	
    <!-- Virtual_COM_Port application condition -->
    <condition id="VCOM Condition">
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="Controller" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL" Cvariant="Basic" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL_INTERFACE" Cvariant="UserBoard" Cversion="1.1.0"/>
      <deny Cbundle="STM32WB05N_BLE_Manager" Cclass="BLE_Manager" Cgroup="BLE_Manager" Cversion="1.11.0"/>
	  <require Cbundle="HCI_Interface" Cclass="WB05KN1" Cgroup="Communication protocol"/>
    </condition>
	
	    <!-- IFRSTACK_UPDATER application condition -->
    <condition id="IFRSTACK_UPDATER Condition">
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="Controller" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL" Cvariant="Basic" Cversion="1.1.0"/>
      <require Cbundle="STM32WB05N" Cclass="Wireless" Cgroup="STM32WB05N" Csub="HCI_TL_INTERFACE" Cvariant="UserBoard" Cversion="1.1.0"/>
      <deny Cbundle="STM32WB05N_BLE_Manager" Cclass="BLE_Manager" Cgroup="BLE_Manager" Cversion="1.11.0"/>
	  <require Cbundle="HCI_Interface" Cclass="WB05KN1" Cgroup="Communication protocol"/>
	  <require Dcore="Cortex-M33"/>
    </condition>
  </conditions>

  <components>
    <bundle Cbundle="STM32WB05N" Cvendor="STMicroelectronics" Cclass="Wireless" Cversion="1.1.0">
      <description>BLE stack for STM32WB05N module</description>
      <doc>Documentation/STMicroelectronics.X-CUBE-WB05N_GettingStarted.pdf</doc>
      <component Cgroup="STM32WB05N" Csub="Controller" condition="BLEStack Condition" maxInstances="1">
        <!-- short component description -->
        <description>Host Controller Interface (HCI)</description> 
        <files>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/ble_const.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/ble_status.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/ble_types.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb_conf_template.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb_utils.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_aci.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_events.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_gap.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_gap_aci.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_gatt_aci.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_gatt_server.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_hal.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_hal_aci.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_hci_le.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_l2cap_aci.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/stm32wb05n_types.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/hci_parser.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/hci.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/hci_const.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/link_layer.h"/>
			<file category="header" name="Middlewares/ST/STM32WB05N/includes/sm.h"/>
			<file category="source" name="Middlewares/ST/STM32WB05N/hci/controller/stm32wb05n_gap_aci.c"/>
			<file category="source" name="Middlewares/ST/STM32WB05N/hci/controller/stm32wb05n_gatt_aci.c"/>
			<file category="source" name="Middlewares/ST/STM32WB05N/hci/controller/stm32wb05n_hal_aci.c"/>
			<file category="source" name="Middlewares/ST/STM32WB05N/hci/controller/stm32wb05n_l2cap_aci.c"/>
        </files>
      </component>
	  
      <component Cgroup="STM32WB05N" Csub="HCI_TL" Cvariant="Basic" condition="TL API Condition" isDefaultVariant="true" maxInstances="1">
        <description>Basic HCI Transport Layer (use a basic set of already implemented APIs)</description>
        <RTE_Components_h>#define HCI_TL</RTE_Components_h>
        <files>
          <file category="source"  name="Middlewares/ST/STM32WB05N/hci/hci_tl_patterns/Basic/hci_tl.c" />
          <file category="header"  name="Middlewares/ST/STM32WB05N/hci/hci_tl_patterns/Basic/hci_tl.h" />
          <file category="source"  name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_devConfig.c" />
          <file category="source"  name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_events.c" />
          <file category="source"  name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_events_cb.c" />
          <file category="source"  name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_hci_le.c" />
		  <file category="source"  name="Middlewares/ST/STM32WB05N/hci/hci_parser.c" />
        </files>
      </component>	  
      <component Cgroup="STM32WB05N" Csub="HCI_TL" Cvariant="Template" condition="TL API Condition" isDefaultVariant="false" maxInstances="1">
        <description>Template for HCI Transport Layer (the user can customize the available set of APIs)</description>
        <RTE_Components_h>#define HCI_TL</RTE_Components_h>
        <files>          
		  <file attr="template" category="source" select="HCI TL source template file" name="Middlewares/ST/STM32WB05N/hci/hci_tl_patterns/Template/hci_tl.c" />
		  <file attr="template" category="header" select="HCI TL header template file" name="Middlewares/ST/STM32WB05N/hci/hci_tl_patterns/Template/hci_tl.h" />
		  <file                 category="source" select="STM32WB05N devConfig template file" name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_devConfig.c" />
          <file                 category="source" select="STM32WB05N event manager template file" name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_events.c" />
          <file                 category="source" select="STM32WB05N event callback template file" name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_events_cb.c" />
          <file                 category="source" select="STM32WB05N HCI LE template file" name="Middlewares/ST/STM32WB05N/hci/stm32wb05n_hci_le.c" />
        </files>
      </component>
      
      <component Cgroup="STM32WB05N" Csub="HCI_TL_INTERFACE" Cvariant="UserBoard" condition="" isDefaultVariant="true" maxInstances="1" Capiversion="1.1.0">
        <description>HCI Transport Layer Interface based on User Board definition (use a basic set of already implemented APIs)</description>
        <RTE_Components_h>#define HCI_TL_INTERFACE</RTE_Components_h>
        <files>
          <file category="doc" name="Documentation/X-CUBE-WB05N.chm"/>
        </files>
      </component>
      
      <component Cgroup="STM32WB05N" Csub="HCI_TL_INTERFACE" Cvariant="Template" condition="" maxInstances="1" isDefaultVariant="false" Capiversion="1.1.0">
        <description>Template for HCI Transport Layer Interface (the user can customize the available set of APIs)</description>
        <RTE_Components_h>#define HCI_TL_INTERFACE</RTE_Components_h>
        <files>
          <file attr="template" category="source" select="HCI TL Interface source template file" name="Middlewares/ST/STM32WB05N/hci/hci_tl_patterns/Template/hci_tl_interface.c" />
          <file attr="template" category="header" select="HCI TL Interface header template file" name="Middlewares/ST/STM32WB05N/hci/hci_tl_patterns/Template/hci_tl_interface.h" />
          <file category="doc" name="Documentation/X-CUBE-WB05N.chm"/>
        </files>
      </component>

      <component Cgroup="STM32WB05N" Csub="Utils" condition="" maxInstances="1">
      <description>Utilities</description>      
        <files>
          <file category="source" name="Middlewares/ST/STM32WB05N/utils/ble_list.c" />
          <file category="header" name="Middlewares/ST/STM32WB05N/utils/ble_list.h" />
		  <file category="header" name="Middlewares/ST/STM32WB05N/utils/compiler.h" />
        </files>
      </component>
    </bundle>  
    
	<bundle Cbundle="STM32WB05N_BLE_Manager" Cclass="BLE_Manager" Cversion="1.11.0">
        <description>STM32WB05N_BLE_Manager middleware manager according to the STM32WB05N middleware APIs.</description>
        <doc>Middlewares/ST/STM32WB05N_BLE_Manager/Release_Notes.html</doc>
        <component Cgroup="BLE_Manager" condition="" maxInstances="1">
            <description>Add bluetooth services using vendor specific profiles</description>
            <files>
                <file category="header" name="Middlewares/ST/STM32WB05N_BLE_Manager/Inc/BLE_Manager.h"/>
                <file category="header" name="Middlewares/ST/STM32WB05N_BLE_Manager/Inc/BLE_ManagerCommon.h"/>
                <file category="header" name="Middlewares/ST/STM32WB05N_BLE_Manager/Inc/BLE_ManagerControl.h"/>
                <file category="source" name="Middlewares/ST/STM32WB05N_BLE_Manager/Src/BLE_Manager.c"/>
            </files>
        </component>
    </bundle>
		
    <bundle Cbundle="parson" Cclass="Data Exchange" Cvendor="Third_Party" Cversion="1.5.2">
        <description>Parson is a lighweight json library written in C.</description>
        <doc>Middlewares/Third_Party/parson/Release_Notes.html</doc>
        <component Cgroup="parson" condition="" maxInstances="1">
            <description>Parson is a lighweight json library written in C.</description>
            <RTE_Components_h>#define USE_PARSON</RTE_Components_h>
            <files>
                <file category="source" name="Middlewares/Third_Party/parson/parson.c"/>
                <file category="header" name="Middlewares/Third_Party/parson/parson.h"/>
            </files>
        </component>
    </bundle>

	<bundle Cbundle="HCI_Interface" Cvendor="STMicroelectronics" Cclass="WB05KN1" Cversion="1.1.0">
    <description>Protocol selection for HCI Interface</description>
	  <doc>Documentation/STMicroelectronics.X-CUBE-WB05N_GettingStarted.pdf</doc>
	  <component Cgroup="Communication protocol" Cvariant="SPI" condition="" isDefaultVariant="true" maxInstances="1">
        <description>BSP for SPI</description>
        <RTE_Components_h>#define USE_SPI</RTE_Components_h>
		    <files>
            </files>
      </component>
	  <component Cgroup="Communication protocol" Cvariant="UART" condition="" isDefaultVariant="false" maxInstances="1">
        <description>BSP for UART</description>
        <RTE_Components_h>#define USE_UART</RTE_Components_h>
		    <files>
            </files>
      </component>
    </bundle>
		
    <bundle Cbundle="WB05N_Applications" Cvendor="STMicroelectronics" Cclass="Device" Cversion="1.1.0">
      <description>BLE sample applications for STM32WB05N module</description>
      <doc>Documentation/STMicroelectronics.X-CUBE-WB05N_GettingStarted.pdf</doc>
      <component Cgroup="Application" Cvariant="Beacon" isDefaultVariant="false" condition="Application Condition" maxInstances="1">
        <description>Beacon sample application</description> 
        <RTE_Components_h>#define BEACON</RTE_Components_h>
        <files>
          <file category="doc" select="readme file" name="Projects/NUCLEO-U575ZI/Applications/Beacon/readme.md" />
        </files>
      </component>
      <component Cgroup="Application" Cvariant="BLE_FOTA" isDefaultVariant="false" condition="JSON" maxInstances="1">
        <description>BLE FOTA sample application</description> 
        <RTE_Components_h>#define FOTA</RTE_Components_h>
        <files>
          <file category="doc" select="readme file" name="Projects/NUCLEO-U575ZI/Applications/BLE_FOTA/readme.md" />
        </files>
      </component>
      <component Cgroup="Application" Cvariant="IFRStackUpdater" isDefaultVariant="false" condition="IFRSTACK_UPDATER Condition" maxInstances="1">
        <description>IFR/Stack Updater sample application</description> 
        <RTE_Components_h>#define IFRSTACK_UPDATER</RTE_Components_h>
        <files>
          <file category="doc" select="readme file" name="Projects/NUCLEO-U575ZI/Applications/IFRStack_Updater/readme.md" />
        </files>
      </component>
      <component Cgroup="Application" Cvariant="SampleApp" isDefaultVariant="false" condition="Application Condition" maxInstances="1">
        <description>SampleApp sample application</description>
        <RTE_Components_h>#define SAMPLE_APP</RTE_Components_h>
        <files>
          <file category="doc" select="readme file" name="Projects/NUCLEO-U575ZI/Applications/SampleApp/readme.md" />
        </files>
      </component>
      <component Cgroup="Application" Cvariant="SensorDemoBLESensor" isDefaultVariant="false" condition="Application Condition" maxInstances="1">
        <description>SensorDemo sample application for the ST BLE Sensor app</description>
        <RTE_Components_h>#define SENSOR_DEMO_BS</RTE_Components_h>
        <files>
          <file category="doc" select="readme file" name="Projects/NUCLEO-U575ZI/Applications/SensorDemo_BLESensor-App/readme.md" />
        </files>
      </component>
      <component Cgroup="Application" Cvariant="VirtualCOMPort" isDefaultVariant="false" condition="VCOM Condition" maxInstances="1">
        <description>Virtual_COM_Port sample application</description>
        <RTE_Components_h>#define VIRTUAL_COM_PORT</RTE_Components_h>
        <files>
          <file category="doc" select="readme file" name="Projects/NUCLEO-U575ZI/Applications/Virtual_COM_Port/readme.md" />
        </files>
      </component>
    </bundle>
          
  </components>
  
</package>
